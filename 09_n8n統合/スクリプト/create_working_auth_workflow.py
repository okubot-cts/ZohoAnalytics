#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Âãï‰Ωú„Åô„ÇãZohoCRMË™çË®º„ÉØ„Éº„ÇØ„Éï„É≠„Éº‰ΩúÊàê„Çπ„ÇØ„É™„Éó„Éà
Êó¢Â≠ò„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„ÉºÊßãÈÄ†„ÇíÂèÇËÄÉ„Å´„Åó„Å¶‰ΩúÊàê
"""

import requests
import json
import os
from datetime import datetime

def create_working_auth_workflow():
    """Âãï‰Ωú„Åô„ÇãZohoCRMË™çË®º„ÉØ„Éº„ÇØ„Éï„É≠„Éº„Çí‰ΩúÊàê"""
    
    # n8nË®≠ÂÆö
    N8N_BASE_URL = "https://cts-automation.onrender.com"
    N8N_API_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3MDdhZjlkZC0xOTZmLTQ3NTMtOGUzMS1iOTVjMjE0ZDllZDAiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU0Njg4NTIxLCJleHAiOjE3NTcyNTcyMDB9.KmgJp75KaTcrXmnxCb1bNnRmHG3Jex7dgDjLPpRk0EQ"
    
    headers = {
        'X-N8N-API-KEY': N8N_API_KEY,
        'Content-Type': 'application/json'
    }
    
    print("=== Âãï‰Ωú„Åô„ÇãZohoCRMË™çË®º„ÉØ„Éº„ÇØ„Éï„É≠„Éº‰ΩúÊàê ===\n")
    
    # Âãï‰Ωú„Åô„ÇãË™çË®º„ÉØ„Éº„ÇØ„Éï„É≠„Éº
    workflow = {
        "name": "Zoho CRM - Working Auth System",
        "settings": {},
        "nodes": [
            {
                "parameters": {
                    "httpMethod": "POST",
                    "path": "zoho-auth",
                    "options": {}
                },
                "type": "n8n-nodes-base.webhook",
                "typeVersion": 2,
                "position": [240, 300],
                "id": "webhook-trigger",
                "name": "Webhook"
            },
            {
                "parameters": {
                    "values": {
                        "string": [
                            {
                                "name": "action",
                                "value": "={{ $json.body.action || 'test_auth' }}"
                            },
                            {
                                "name": "timestamp",
                                "value": "={{ $now.toISOString() }}"
                            }
                        ]
                    }
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [460, 300],
                "id": "parse-request",
                "name": "Parse Request"
            },
            {
                "parameters": {
                    "operation": "getAll",
                    "resource": "deals",
                    "limit": 1
                },
                "type": "n8n-nodes-base.zohoCrm",
                "typeVersion": 1,
                "position": [680, 200],
                "id": "zoho-auth-test",
                "name": "Zoho CRM Auth Test",
                "credentials": {
                    "zohoCrmOAuth2Api": {
                        "id": "zoho-crm-oauth2",
                        "name": "Zoho CRM OAuth2"
                    }
                }
            },
            {
                "parameters": {
                    "url": "https://accounts.zoho.com/oauth/v2/token",
                    "method": "POST",
                    "sendHeaders": True,
                    "headerParameters": {
                        "parameters": [
                            {
                                "name": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ]
                    },
                    "sendBody": True,
                    "bodyParameters": {
                        "parameters": [
                            {
                                "name": "grant_type",
                                "value": "refresh_token"
                            },
                            {
                                "name": "refresh_token",
                                "value": "={{ $credentials.zohoCrmOAuth2Api.refresh_token }}"
                            }
                        ]
                    }
                },
                "type": "n8n-nodes-base.httpRequest",
                "typeVersion": 4.2,
                "position": [680, 400],
                "id": "refresh-token",
                "name": "Refresh Token"
            },
            {
                "parameters": {
                    "responseBody": "={{ { 'success': true, 'message': 'ZohoCRMË™çË®ºÊàêÂäü', 'timestamp': $json.timestamp, 'action': $json.action, 'data': $json.data } }}",
                    "responseCode": 200
                },
                "type": "n8n-nodes-base.respondToWebhook",
                "typeVersion": 1,
                "position": [900, 200],
                "id": "auth-success",
                "name": "Auth Success Response"
            },
            {
                "parameters": {
                    "responseBody": "={{ { 'success': true, 'message': '„Éà„Éº„ÇØ„É≥Êõ¥Êñ∞ÊàêÂäü', 'timestamp': $now.toISOString(), 'action': 'refresh_token', 'token_info': $json } }}",
                    "responseCode": 200
                },
                "type": "n8n-nodes-base.respondToWebhook",
                "typeVersion": 1,
                "position": [900, 400],
                "id": "refresh-success",
                "name": "Refresh Success Response"
            },
            {
                "parameters": {
                    "rules": {
                        "rules": [
                            {
                                "conditions": {
                                    "options": {
                                        "caseSensitive": True,
                                        "leftValue": "",
                                        "typeValidation": "strict"
                                    },
                                    "conditions": [
                                        {
                                            "id": "action-check",
                                            "leftValue": "={{ $json.action }}",
                                            "rightValue": "refresh_token",
                                            "operator": {
                                                "type": "string",
                                                "operation": "equals"
                                            }
                                        }
                                    ],
                                    "combinator": "and"
                                },
                                "output": 1
                            }
                        ]
                    }
                },
                "type": "n8n-nodes-base.switch",
                "typeVersion": 3.3,
                "position": [680, 300],
                "id": "route-action",
                "name": "Route Action"
            }
        ],
        "connections": {
            "Webhook": {
                "main": [
                    [
                        {
                            "node": "Parse Request",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Parse Request": {
                "main": [
                    [
                        {
                            "node": "Route Action",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Route Action": {
                "main": [
                    [
                        {
                            "node": "Zoho CRM Auth Test",
                            "type": "main",
                            "index": 0
                        }
                    ],
                    [
                        {
                            "node": "Refresh Token",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Zoho CRM Auth Test": {
                "main": [
                    [
                        {
                            "node": "Auth Success Response",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            },
            "Refresh Token": {
                "main": [
                    [
                        {
                            "node": "Refresh Success Response",
                            "type": "main",
                            "index": 0
                        }
                    ]
                ]
            }
        }
    }
    
    print("üìù „ÉØ„Éº„ÇØ„Éï„É≠„ÉºÂÆöÁæ©„Çí‰ΩúÊàê‰∏≠...")
    
    try:
        # „ÉØ„Éº„ÇØ„Éï„É≠„Éº‰ΩúÊàê
        url = f"{N8N_BASE_URL}/api/v1/workflows"
        response = requests.post(url, headers=headers, json=workflow, timeout=60)
        
        print(f"„É¨„Çπ„Éù„É≥„Çπ„Çπ„ÉÜ„Éº„Çø„Çπ: {response.status_code}")
        
        if response.status_code == 200 or response.status_code == 201:
            result = response.json()
            print(f"‚úÖ „ÉØ„Éº„ÇØ„Éï„É≠„Éº‰ΩúÊàêÊàêÂäü")
            
            workflow_id = result.get('id')
            if workflow_id:
                print(f"„ÉØ„Éº„ÇØ„Éï„É≠„ÉºID: {workflow_id}")
                
                # „Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñ
                print("\nüöÄ „ÉØ„Éº„ÇØ„Éï„É≠„Éº„Çí„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñ‰∏≠...")
                activate_url = f"{N8N_BASE_URL}/api/v1/workflows/{workflow_id}/activate"
                activate_response = requests.post(activate_url, headers=headers, timeout=30)
                
                if activate_response.status_code == 200:
                    print("‚úÖ „ÉØ„Éº„ÇØ„Éï„É≠„Éº„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñÊàêÂäü")
                    print(f"Webhook URL: {N8N_BASE_URL}/webhook/zoho-auth")
                    
                    # ‰ΩøÁî®ÊñπÊ≥ï„Ç¨„Ç§„Éâ‰ΩúÊàê
                    create_usage_guide()
                    
                    # „ÉØ„Éº„ÇØ„Éï„É≠„ÉºÂÆöÁæ©„Çí‰øùÂ≠ò
                    workflow_path = os.path.join(
                        os.path.dirname(__file__),
                        '../„ÉØ„Éº„ÇØ„Éï„É≠„Éº/zoho_working_auth_workflow.json'
                    )
                    
                    with open(workflow_path, 'w', encoding='utf-8') as f:
                        json.dump(workflow, f, indent=2, ensure_ascii=False)
                    
                    print(f"üíæ „ÉØ„Éº„ÇØ„Éï„É≠„ÉºÂÆöÁæ©„Çí‰øùÂ≠ò: {workflow_path}")
                    
                    print("\nüéâ „Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÂÆå‰∫ÜÔºÅ")
                    print("‚ö†Ô∏è  Ê≥®ÊÑè: ZohoCRMË™çË®ºÊÉÖÂ†±„ÅÆË®≠ÂÆö„ÅåÂøÖË¶Å„Åß„Åô")
                    print("n8n„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„ÅßË™çË®ºÊÉÖÂ†±„ÇíË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ")
                else:
                    print(f"‚ùå „Ç¢„ÇØ„ÉÜ„Ç£„ÉñÂåñ„Ç®„É©„Éº: {activate_response.status_code}")
                    print(f"„É¨„Çπ„Éù„É≥„Çπ: {activate_response.text}")
        else:
            print(f"‚ùå „ÉØ„Éº„ÇØ„Éï„É≠„Éº‰ΩúÊàê„Ç®„É©„Éº: {response.status_code}")
            print(f"„Ç®„É©„Éº„É¨„Çπ„Éù„É≥„Çπ: {response.text}")
            
            # „Ç®„É©„Éº„ÅÆË©≥Á¥∞„ÇíÁ¢∫Ë™ç
            try:
                error_data = response.json()
                print(f"„Ç®„É©„Éº„Éá„Éº„Çø: {json.dumps(error_data, indent=2)}")
            except:
                print("„Ç®„É©„Éº„É¨„Çπ„Éù„É≥„Çπ„ÅÆËß£Êûê„Å´Â§±Êïó")
    
    except requests.exceptions.RequestException as e:
        print(f"‚ùå „É™„ÇØ„Ç®„Çπ„Éà„Ç®„É©„Éº: {e}")

def create_usage_guide():
    """‰ΩøÁî®ÊñπÊ≥ï„Ç¨„Ç§„Éâ„Çí‰ΩúÊàê"""
    
    guide = """
# ZohoCRMË™çË®º„ÉØ„Éº„ÇØ„Éï„É≠„Éº‰ΩøÁî®„Ç¨„Ç§„Éâ

## Ê¶ÇË¶Å
„Åì„ÅÆ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÅØ„ÄÅZohoCRM„ÅÆË™çË®º„Ç∑„Çπ„ÉÜ„É†„Å®„É™„Éï„É¨„ÉÉ„Ç∑„É•„Éà„Éº„ÇØ„É≥Ê©üËÉΩ„ÇíÂê´„ÇÄÂãï‰Ωú„Åô„ÇãË™çË®º„Ç∑„Çπ„ÉÜ„É†„Åß„Åô„ÄÇ

## Ê©üËÉΩ
- ‚úÖ ZohoCRMË™çË®º„ÉÜ„Çπ„Éà
- ‚úÖ „É™„Éï„É¨„ÉÉ„Ç∑„É•„Éà„Éº„ÇØ„É≥Ëá™ÂãïÊõ¥Êñ∞
- ‚úÖ „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞

## ‰ΩøÁî®ÊñπÊ≥ï

### 1. Ë™çË®º„ÉÜ„Çπ„Éà
```bash
curl -X POST https://cts-automation.onrender.com/webhook/zoho-auth \\
  -H "Content-Type: application/json" \\
  -d '{"action": "test_auth"}'
```

### 2. „É™„Éï„É¨„ÉÉ„Ç∑„É•„Éà„Éº„ÇØ„É≥Êõ¥Êñ∞
```bash
curl -X POST https://cts-automation.onrender.com/webhook/zoho-auth \\
  -H "Content-Type: application/json" \\
  -d '{"action": "refresh_token"}'
```

## „É¨„Çπ„Éù„É≥„ÇπÂΩ¢Âºè

### Ë™çË®ºÊàêÂäüÊôÇ
```json
{
  "success": true,
  "message": "ZohoCRMË™çË®ºÊàêÂäü",
  "timestamp": "2025-01-XX...",
  "action": "test_auth",
  "data": [...]
}
```

### „Éà„Éº„ÇØ„É≥Êõ¥Êñ∞ÊàêÂäüÊôÇ
```json
{
  "success": true,
  "message": "„Éà„Éº„ÇØ„É≥Êõ¥Êñ∞ÊàêÂäü",
  "timestamp": "2025-01-XX...",
  "action": "refresh_token",
  "token_info": {
    "access_token": "...",
    "expires_in": 3600,
    "token_type": "Bearer"
  }
}
```

## Ë®≠ÂÆö
- Webhook URL: `https://cts-automation.onrender.com/webhook/zoho-auth`
- Ë™çË®ºÊñπÂºè: OAuth2
- „Çπ„Ç≥„Éº„Éó: `ZohoCRM.modules.ALL,ZohoCRM.settings.ALL`

## Ê≥®ÊÑè‰∫ãÈ†Ö
- ÂàùÂõûÂÆüË°åÊôÇ„ÅØË™çË®ºÊÉÖÂ†±„ÅÆË®≠ÂÆö„ÅåÂøÖË¶Å„Åß„Åô
- „É™„Éï„É¨„ÉÉ„Ç∑„É•„Éà„Éº„ÇØ„É≥„ÅØËá™ÂãïÁöÑ„Å´Êõ¥Êñ∞„Åï„Çå„Åæ„Åô
- „Ç®„É©„ÉºÊôÇ„ÅØË©≥Á¥∞„Å™„É≠„Ç∞„ÅåÂá∫Âäõ„Åï„Çå„Åæ„Åô
"""
    
    # „Ç¨„Ç§„Éâ„Çí„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
    guide_path = os.path.join(
        os.path.dirname(__file__),
        '../„Éâ„Ç≠„É•„É°„É≥„Éà/zoho_working_auth_guide.md'
    )
    
    os.makedirs(os.path.dirname(guide_path), exist_ok=True)
    
    with open(guide_path, 'w', encoding='utf-8') as f:
        f.write(guide)
    
    print(f"üìñ ‰ΩøÁî®ÊñπÊ≥ï„Ç¨„Ç§„Éâ„Çí‰øùÂ≠ò: {guide_path}")

def main():
    """„É°„Ç§„É≥ÂÆüË°åÈñ¢Êï∞"""
    create_working_auth_workflow()

if __name__ == "__main__":
    main() 